{
  "timestamp": "2025-06-30T09:33:29.845Z",
  "phase": "Phase 15A: Multi-Event Webhook System",
  "baseUrl": "http://localhost:5000",
  "overallSuccess": false,
  "stats": {
    "requests": {
      "total": 1,
      "pending": 0,
      "failed": 0
    },
    "assertions": {
      "total": 4,
      "pending": 0,
      "failed": 2
    },
    "duration": 2183,
    "averageResponseTime": 32
  },
  "eventTests": {
    "gift_card_issued": {
      "passed": 2,
      "failed": 2
    },
    "gift_card_redeemed": {
      "passed": 0,
      "failed": 0
    },
    "gift_card_refunded": {
      "passed": 0,
      "failed": 0
    },
    "security": {
      "passed": 0,
      "failed": 0
    },
    "performance": {
      "passed": 0,
      "failed": 0
    }
  },
  "failures": [
    {
      "error": {
        "name": "AssertionError",
        "index": 0,
        "test": "Mock webhook accepts gift_card_issued event",
        "message": "expected response to have status code 200 but got 401",
        "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:1)",
        "checksum": "c1caf8f7a14fae0c73a071aae9f9a453",
        "id": "63612cba-884a-4fa4-951c-53f68d49ba53",
        "timestamp": 1751276009815,
        "stacktrace": [
          {
            "fileName": "sandbox-script.js",
            "lineNumber": 1,
            "functionName": "Object.eval",
            "typeName": "Object",
            "methodName": "eval",
            "columnNumber": 1,
            "native": false
          }
        ]
      },
      "at": "assertion:0 in test-script",
      "source": {
        "id": "cac85134-d143-49ed-a5a2-91325c9a4dbe",
        "name": "Test 1: Mock Webhook - Gift Card Issued",
        "request": {
          "url": {
            "path": [
              "api",
              "mock",
              "webhook"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-SiZu-Signature",
              "value": "sha256=8f5a7b2c9d1e4f6a8b2c5d8f1a4b7c0e3f6a9b2c5d8f1a4b7c0e3f6a9b2c5d8f"
            },
            {
              "key": "X-SiZu-Event",
              "value": "gift_card_issued"
            },
            {
              "key": "X-SiZu-Timestamp",
              "value": "{{current_timestamp}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_123\",\n    \"giftCardCode\": \"GC-ISSUED-001\",\n    \"merchantId\": \"test-merchant-001\",\n    \"amount\": 5000,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"customer@example.com\",\n    \"issuedAt\": \"{{current_timestamp}}\"\n  }\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
              "type": "text/javascript",
              "exec": [
                "pm.test('Mock webhook accepts gift_card_issued event', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response contains correct event type', function () {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.eventType).to.eql('gift_card_issued');",
                "    pm.expect(jsonData.success).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "8e2313d9-293b-416c-8092-702b4fc21d49"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "508fcb61-1c4f-4b1c-b147-c7a6389c13e4",
              "type": "text/javascript",
              "exec": [
                "pm.globals.set('current_timestamp', new Date().toISOString());"
              ],
              "_lastExecutionId": "53cd40f7-0f40-4808-8f8f-7354ca856dca"
            }
          }
        ]
      },
      "parent": {
        "id": "49a64b77-01df-4cc0-92f3-4cb68fead43e",
        "name": "Multi-Event Webhook Tests",
        "item": [
          {
            "id": "cac85134-d143-49ed-a5a2-91325c9a4dbe",
            "name": "Test 1: Mock Webhook - Gift Card Issued",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=8f5a7b2c9d1e4f6a8b2c5d8f1a4b7c0e3f6a9b2c5d8f1a4b7c0e3f6a9b2c5d8f"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_123\",\n    \"giftCardCode\": \"GC-ISSUED-001\",\n    \"merchantId\": \"test-merchant-001\",\n    \"amount\": 5000,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"customer@example.com\",\n    \"issuedAt\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_issued event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_issued');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ],
                  "_lastExecutionId": "8e2313d9-293b-416c-8092-702b4fc21d49"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "508fcb61-1c4f-4b1c-b147-c7a6389c13e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ],
                  "_lastExecutionId": "53cd40f7-0f40-4808-8f8f-7354ca856dca"
                }
              }
            ]
          },
          {
            "id": "ab3f1e13-4a93-4f51-ba6c-bb1931009d4c",
            "name": "Test 2: Mock Webhook - Gift Card Redeemed",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=7e4a6b1c8d0e3f5a7b1c4d7e0a3b6c9e2f5a8b1c4d7e0a3b6c9e2f5a8b1c4d7e"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_redeemed"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_redeemed\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_456\",\n    \"giftCardCode\": \"GC-REDEEMED-002\",\n    \"merchantId\": \"test-merchant-002\",\n    \"amount\": 2500,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"redeemer@example.com\",\n    \"redemptionTime\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "85a5197e-7883-4f7f-a83f-1d5e286ed620",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_redeemed event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_redeemed');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eaa5dfa-74d4-4591-8773-3d11648d71c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "cf542e4e-8af9-414f-907f-bb9658071a0f",
            "name": "Test 3: Mock Webhook - Gift Card Refunded",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=6d3a5b0c7d9e2f4a6b0c3d6e9a2b5c8e1f4a7b0c3d6e9a2b5c8e1f4a7b0c3d6e"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_refunded"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_refunded\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_789\",\n    \"giftCardCode\": \"GC-REFUNDED-003\",\n    \"merchantId\": \"test-merchant-003\",\n    \"amount\": 7500,\n    \"currency\": \"USD\",\n    \"refundReason\": \"Customer request\",\n    \"refundedAt\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7058af69-9595-4fb5-9ec8-db00f8be4f7b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_refunded event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_refunded');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "50daabbc-2c44-4ec8-9b5c-9502658e15c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "6d4b931e-3b07-4bd6-b38c-20320e8303be",
            "name": "Test 4: Invalid Signature Rejection",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=invalid_signature_123"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_invalid\",\n    \"giftCardCode\": \"GC-INVALID-999\",\n    \"merchantId\": \"test-merchant-invalid\",\n    \"amount\": 1000,\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "745d6cf8-5dfc-4876-9fc0-957431873988",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Invalid signature is rejected', function () {",
                    "    pm.response.to.have.status(401);",
                    "});",
                    "",
                    "pm.test('Error message indicates invalid signature', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.false;",
                    "    pm.expect(jsonData.error).to.include('Invalid webhook signature');",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc65e2ec-136c-469b-94da-fee05b2f7381",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "7a0f48fb-5c11-4107-a25e-bb99baf9bef4",
            "name": "Test 5: Webhook Without Signature",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_no_sig\",\n    \"giftCardCode\": \"GC-NO-SIG-004\",\n    \"merchantId\": \"test-merchant-004\",\n    \"amount\": 3000,\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9449c9fe-c61f-4099-85bb-6c85896e2acb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Webhook without signature is accepted but not verified', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response indicates no signature verification', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "    pm.expect(jsonData.signatureVerified).to.be.false;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "f761da63-d6d5-47c2-806c-dc38a5557486",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "6d11bbfc-ce69-4c9b-9258-e10dfbbb6320",
            "name": "Test 6: Gift Card Redemption Triggers Webhook",
            "request": {
              "url": {
                "path": [
                  "api",
                  "gift-cards",
                  "redeem"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"code\": \"TEST-GC-WEBHOOK-123\",\n  \"redeemedBy\": \"webhook-test@example.com\",\n  \"merchantId\": \"test-merchant-webhook\",\n  \"amount\": 2500\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bc52c776-bb3a-4b37-9432-6e0692d73d38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Gift card redemption processed', function () {",
                    "    // Note: This test may fail if gift card doesn't exist",
                    "    // Test validates webhook trigger mechanism is in place",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 404, 400]);",
                    "});",
                    "",
                    "pm.test('Response structure is valid', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('success');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "305a8ce4-b5bc-4938-96ca-5c763217bfd1",
            "name": "Test 7: Performance Test - Multiple Events",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_perf_test_{{$randomInt}}\",\n    \"giftCardCode\": \"GC-PERF-{{$randomInt}}\",\n    \"merchantId\": \"perf-test-merchant\",\n    \"amount\": {{$randomInt}},\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1eeefd1d-7917-44f5-a738-453d5e828228",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Performance test - response time under 500ms', function () {",
                    "    pm.expect(pm.response.responseTime).to.be.below(500);",
                    "});",
                    "",
                    "pm.test('Performance test - successful processing', function () {",
                    "    pm.response.to.have.status(200);",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "b13ce9bc-604e-407c-8164-eb59f3890677",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      "cursor": {
        "position": 0,
        "iteration": 0,
        "length": 7,
        "cycles": 1,
        "empty": false,
        "eof": false,
        "bof": true,
        "cr": false,
        "ref": "a96d4bc4-268e-48a0-abee-7de5196b3b0a",
        "httpRequestId": "0e8af55d-436c-48b7-b18d-c53bdbc6ac72",
        "scriptId": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
        "execution": "8e2313d9-293b-416c-8092-702b4fc21d49"
      }
    },
    {
      "error": {
        "name": "AssertionError",
        "index": 1,
        "test": "Response contains correct event type",
        "message": "expected false to be true",
        "stack": "AssertionError: expected false to be true\n   at Object.eval sandbox-script.js:2:1)",
        "checksum": "8002ad412c89726d083ddad25cf3a9b3",
        "id": "12e0f675-0159-42fb-b516-0161cdecb268",
        "timestamp": 1751276009818,
        "stacktrace": [
          {
            "fileName": "sandbox-script.js",
            "lineNumber": 2,
            "functionName": "Object.eval",
            "typeName": "Object",
            "methodName": "eval",
            "columnNumber": 1,
            "native": false
          }
        ]
      },
      "at": "assertion:1 in test-script",
      "source": {
        "id": "cac85134-d143-49ed-a5a2-91325c9a4dbe",
        "name": "Test 1: Mock Webhook - Gift Card Issued",
        "request": {
          "url": {
            "path": [
              "api",
              "mock",
              "webhook"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-SiZu-Signature",
              "value": "sha256=8f5a7b2c9d1e4f6a8b2c5d8f1a4b7c0e3f6a9b2c5d8f1a4b7c0e3f6a9b2c5d8f"
            },
            {
              "key": "X-SiZu-Event",
              "value": "gift_card_issued"
            },
            {
              "key": "X-SiZu-Timestamp",
              "value": "{{current_timestamp}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_123\",\n    \"giftCardCode\": \"GC-ISSUED-001\",\n    \"merchantId\": \"test-merchant-001\",\n    \"amount\": 5000,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"customer@example.com\",\n    \"issuedAt\": \"{{current_timestamp}}\"\n  }\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
              "type": "text/javascript",
              "exec": [
                "pm.test('Mock webhook accepts gift_card_issued event', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response contains correct event type', function () {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.eventType).to.eql('gift_card_issued');",
                "    pm.expect(jsonData.success).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "8e2313d9-293b-416c-8092-702b4fc21d49"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "508fcb61-1c4f-4b1c-b147-c7a6389c13e4",
              "type": "text/javascript",
              "exec": [
                "pm.globals.set('current_timestamp', new Date().toISOString());"
              ],
              "_lastExecutionId": "53cd40f7-0f40-4808-8f8f-7354ca856dca"
            }
          }
        ]
      },
      "parent": {
        "id": "49a64b77-01df-4cc0-92f3-4cb68fead43e",
        "name": "Multi-Event Webhook Tests",
        "item": [
          {
            "id": "cac85134-d143-49ed-a5a2-91325c9a4dbe",
            "name": "Test 1: Mock Webhook - Gift Card Issued",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=8f5a7b2c9d1e4f6a8b2c5d8f1a4b7c0e3f6a9b2c5d8f1a4b7c0e3f6a9b2c5d8f"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_123\",\n    \"giftCardCode\": \"GC-ISSUED-001\",\n    \"merchantId\": \"test-merchant-001\",\n    \"amount\": 5000,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"customer@example.com\",\n    \"issuedAt\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_issued event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_issued');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ],
                  "_lastExecutionId": "8e2313d9-293b-416c-8092-702b4fc21d49"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "508fcb61-1c4f-4b1c-b147-c7a6389c13e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ],
                  "_lastExecutionId": "53cd40f7-0f40-4808-8f8f-7354ca856dca"
                }
              }
            ]
          },
          {
            "id": "ab3f1e13-4a93-4f51-ba6c-bb1931009d4c",
            "name": "Test 2: Mock Webhook - Gift Card Redeemed",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=7e4a6b1c8d0e3f5a7b1c4d7e0a3b6c9e2f5a8b1c4d7e0a3b6c9e2f5a8b1c4d7e"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_redeemed"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_redeemed\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_456\",\n    \"giftCardCode\": \"GC-REDEEMED-002\",\n    \"merchantId\": \"test-merchant-002\",\n    \"amount\": 2500,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"redeemer@example.com\",\n    \"redemptionTime\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "85a5197e-7883-4f7f-a83f-1d5e286ed620",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_redeemed event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_redeemed');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eaa5dfa-74d4-4591-8773-3d11648d71c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "cf542e4e-8af9-414f-907f-bb9658071a0f",
            "name": "Test 3: Mock Webhook - Gift Card Refunded",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=6d3a5b0c7d9e2f4a6b0c3d6e9a2b5c8e1f4a7b0c3d6e9a2b5c8e1f4a7b0c3d6e"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_refunded"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_refunded\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_789\",\n    \"giftCardCode\": \"GC-REFUNDED-003\",\n    \"merchantId\": \"test-merchant-003\",\n    \"amount\": 7500,\n    \"currency\": \"USD\",\n    \"refundReason\": \"Customer request\",\n    \"refundedAt\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7058af69-9595-4fb5-9ec8-db00f8be4f7b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_refunded event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_refunded');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "50daabbc-2c44-4ec8-9b5c-9502658e15c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "6d4b931e-3b07-4bd6-b38c-20320e8303be",
            "name": "Test 4: Invalid Signature Rejection",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=invalid_signature_123"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_invalid\",\n    \"giftCardCode\": \"GC-INVALID-999\",\n    \"merchantId\": \"test-merchant-invalid\",\n    \"amount\": 1000,\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "745d6cf8-5dfc-4876-9fc0-957431873988",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Invalid signature is rejected', function () {",
                    "    pm.response.to.have.status(401);",
                    "});",
                    "",
                    "pm.test('Error message indicates invalid signature', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.false;",
                    "    pm.expect(jsonData.error).to.include('Invalid webhook signature');",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc65e2ec-136c-469b-94da-fee05b2f7381",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "7a0f48fb-5c11-4107-a25e-bb99baf9bef4",
            "name": "Test 5: Webhook Without Signature",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_no_sig\",\n    \"giftCardCode\": \"GC-NO-SIG-004\",\n    \"merchantId\": \"test-merchant-004\",\n    \"amount\": 3000,\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9449c9fe-c61f-4099-85bb-6c85896e2acb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Webhook without signature is accepted but not verified', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response indicates no signature verification', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "    pm.expect(jsonData.signatureVerified).to.be.false;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "f761da63-d6d5-47c2-806c-dc38a5557486",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "6d11bbfc-ce69-4c9b-9258-e10dfbbb6320",
            "name": "Test 6: Gift Card Redemption Triggers Webhook",
            "request": {
              "url": {
                "path": [
                  "api",
                  "gift-cards",
                  "redeem"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"code\": \"TEST-GC-WEBHOOK-123\",\n  \"redeemedBy\": \"webhook-test@example.com\",\n  \"merchantId\": \"test-merchant-webhook\",\n  \"amount\": 2500\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bc52c776-bb3a-4b37-9432-6e0692d73d38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Gift card redemption processed', function () {",
                    "    // Note: This test may fail if gift card doesn't exist",
                    "    // Test validates webhook trigger mechanism is in place",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 404, 400]);",
                    "});",
                    "",
                    "pm.test('Response structure is valid', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('success');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "305a8ce4-b5bc-4938-96ca-5c763217bfd1",
            "name": "Test 7: Performance Test - Multiple Events",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_perf_test_{{$randomInt}}\",\n    \"giftCardCode\": \"GC-PERF-{{$randomInt}}\",\n    \"merchantId\": \"perf-test-merchant\",\n    \"amount\": {{$randomInt}},\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1eeefd1d-7917-44f5-a738-453d5e828228",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Performance test - response time under 500ms', function () {",
                    "    pm.expect(pm.response.responseTime).to.be.below(500);",
                    "});",
                    "",
                    "pm.test('Performance test - successful processing', function () {",
                    "    pm.response.to.have.status(200);",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "b13ce9bc-604e-407c-8164-eb59f3890677",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      "cursor": {
        "position": 0,
        "iteration": 0,
        "length": 7,
        "cycles": 1,
        "empty": false,
        "eof": false,
        "bof": true,
        "cr": false,
        "ref": "a96d4bc4-268e-48a0-abee-7de5196b3b0a",
        "httpRequestId": "0e8af55d-436c-48b7-b18d-c53bdbc6ac72",
        "scriptId": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
        "execution": "8e2313d9-293b-416c-8092-702b4fc21d49"
      }
    },
    {
      "error": {
        "name": "AssertionFailure",
        "message": "Mock webhook accepts gift_card_issued event, Response contains correct event type",
        "stack": "AssertionFailure: Mock webhook accepts gift_card_issued event, Response contains correct event type\n    at postProcessContext (/home/runner/workspace/node_modules/postman-runtime/lib/runner/extensions/event.command.js:41:17)\n    at PostmanCollectionRun.<anonymous> (/home/runner/workspace/node_modules/postman-runtime/lib/runner/extensions/event.command.js:513:39)\n    at PostmanSandbox.<anonymous> (/home/runner/workspace/node_modules/postman-sandbox/lib/postman-sandbox.js:139:13)\n    at Object.onceWrapper (node:events:633:26)\n    at PostmanSandbox.emit (node:events:518:28)\n    at context.__uvm_emit (/home/runner/workspace/node_modules/uvm/lib/bridge.js:71:21)\n    at Object.dispatch (evalmachine.<anonymous>:20:13)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:7860)\n    at t.exports.terminate (evalmachine.<anonymous>:66:22105)\n    at Immediate._onImmediate (evalmachine.<anonymous>:66:5993)\n    at process.processImmediate (node:internal/timers:485:21)",
        "checksum": "ed3f85f19a0992f4f87556538f917727",
        "id": "f799521e-f9f2-42d4-b757-398dd5c4a40c",
        "timestamp": 1751276009820,
        "stacktrace": [
          {
            "fileName": "/home/runner/workspace/node_modules/postman-runtime/lib/runner/extensions/event.command.js",
            "lineNumber": 41,
            "functionName": "postProcessContext",
            "typeName": "Object",
            "methodName": null,
            "columnNumber": 17,
            "native": false
          },
          {
            "fileName": "/home/runner/workspace/node_modules/postman-runtime/lib/runner/extensions/event.command.js",
            "lineNumber": 513,
            "functionName": "",
            "typeName": "PostmanCollectionRun",
            "methodName": null,
            "columnNumber": 39,
            "native": false
          },
          {
            "fileName": "/home/runner/workspace/node_modules/postman-sandbox/lib/postman-sandbox.js",
            "lineNumber": 139,
            "functionName": "",
            "typeName": "PostmanSandbox",
            "methodName": null,
            "columnNumber": 13,
            "native": false
          },
          {
            "fileName": "node:events",
            "lineNumber": 633,
            "functionName": "Object.onceWrapper",
            "typeName": "Object",
            "methodName": "onceWrapper",
            "columnNumber": 26,
            "native": false
          },
          {
            "fileName": "node:events",
            "lineNumber": 518,
            "functionName": "PostmanSandbox.emit",
            "typeName": "PostmanSandbox",
            "methodName": "emit",
            "columnNumber": 28,
            "native": false
          },
          {
            "fileName": "/home/runner/workspace/node_modules/uvm/lib/bridge.js",
            "lineNumber": 71,
            "functionName": "context.__uvm_emit",
            "typeName": "context",
            "methodName": "__uvm_emit",
            "columnNumber": 21,
            "native": false
          },
          {
            "fileName": "evalmachine.<anonymous>",
            "lineNumber": 20,
            "functionName": "Object.dispatch",
            "typeName": "Object",
            "methodName": "dispatch",
            "columnNumber": 13,
            "native": false
          },
          {
            "fileName": "evalmachine.<anonymous>",
            "lineNumber": 66,
            "functionName": "",
            "typeName": "Object",
            "methodName": null,
            "columnNumber": 7860,
            "native": false
          },
          {
            "fileName": "evalmachine.<anonymous>",
            "lineNumber": 66,
            "functionName": "t.exports.terminate",
            "typeName": "t",
            "methodName": "exports.terminate",
            "columnNumber": 22105,
            "native": false
          },
          {
            "fileName": "evalmachine.<anonymous>",
            "lineNumber": 66,
            "functionName": "Immediate._onImmediate",
            "typeName": "Immediate",
            "methodName": "_onImmediate",
            "columnNumber": 5993,
            "native": false
          },
          {
            "fileName": "node:internal/timers",
            "lineNumber": 485,
            "functionName": "process.processImmediate",
            "typeName": "process",
            "methodName": "processImmediate",
            "columnNumber": 21,
            "native": false
          }
        ]
      },
      "at": "test-script:39:17",
      "source": {
        "id": "cac85134-d143-49ed-a5a2-91325c9a4dbe",
        "name": "Test 1: Mock Webhook - Gift Card Issued",
        "request": {
          "url": {
            "path": [
              "api",
              "mock",
              "webhook"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-SiZu-Signature",
              "value": "sha256=8f5a7b2c9d1e4f6a8b2c5d8f1a4b7c0e3f6a9b2c5d8f1a4b7c0e3f6a9b2c5d8f"
            },
            {
              "key": "X-SiZu-Event",
              "value": "gift_card_issued"
            },
            {
              "key": "X-SiZu-Timestamp",
              "value": "{{current_timestamp}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_123\",\n    \"giftCardCode\": \"GC-ISSUED-001\",\n    \"merchantId\": \"test-merchant-001\",\n    \"amount\": 5000,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"customer@example.com\",\n    \"issuedAt\": \"{{current_timestamp}}\"\n  }\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
              "type": "text/javascript",
              "exec": [
                "pm.test('Mock webhook accepts gift_card_issued event', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response contains correct event type', function () {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.eventType).to.eql('gift_card_issued');",
                "    pm.expect(jsonData.success).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "8e2313d9-293b-416c-8092-702b4fc21d49"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "508fcb61-1c4f-4b1c-b147-c7a6389c13e4",
              "type": "text/javascript",
              "exec": [
                "pm.globals.set('current_timestamp', new Date().toISOString());"
              ],
              "_lastExecutionId": "53cd40f7-0f40-4808-8f8f-7354ca856dca"
            }
          }
        ]
      },
      "parent": {
        "id": "49a64b77-01df-4cc0-92f3-4cb68fead43e",
        "name": "Multi-Event Webhook Tests",
        "item": [
          {
            "id": "cac85134-d143-49ed-a5a2-91325c9a4dbe",
            "name": "Test 1: Mock Webhook - Gift Card Issued",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=8f5a7b2c9d1e4f6a8b2c5d8f1a4b7c0e3f6a9b2c5d8f1a4b7c0e3f6a9b2c5d8f"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_123\",\n    \"giftCardCode\": \"GC-ISSUED-001\",\n    \"merchantId\": \"test-merchant-001\",\n    \"amount\": 5000,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"customer@example.com\",\n    \"issuedAt\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "fe00daf6-a3d1-4887-a0de-b584f230a21f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_issued event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_issued');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ],
                  "_lastExecutionId": "8e2313d9-293b-416c-8092-702b4fc21d49"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "508fcb61-1c4f-4b1c-b147-c7a6389c13e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ],
                  "_lastExecutionId": "53cd40f7-0f40-4808-8f8f-7354ca856dca"
                }
              }
            ]
          },
          {
            "id": "ab3f1e13-4a93-4f51-ba6c-bb1931009d4c",
            "name": "Test 2: Mock Webhook - Gift Card Redeemed",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=7e4a6b1c8d0e3f5a7b1c4d7e0a3b6c9e2f5a8b1c4d7e0a3b6c9e2f5a8b1c4d7e"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_redeemed"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_redeemed\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_456\",\n    \"giftCardCode\": \"GC-REDEEMED-002\",\n    \"merchantId\": \"test-merchant-002\",\n    \"amount\": 2500,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"redeemer@example.com\",\n    \"redemptionTime\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "85a5197e-7883-4f7f-a83f-1d5e286ed620",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_redeemed event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_redeemed');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eaa5dfa-74d4-4591-8773-3d11648d71c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "cf542e4e-8af9-414f-907f-bb9658071a0f",
            "name": "Test 3: Mock Webhook - Gift Card Refunded",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=6d3a5b0c7d9e2f4a6b0c3d6e9a2b5c8e1f4a7b0c3d6e9a2b5c8e1f4a7b0c3d6e"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_refunded"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_refunded\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_789\",\n    \"giftCardCode\": \"GC-REFUNDED-003\",\n    \"merchantId\": \"test-merchant-003\",\n    \"amount\": 7500,\n    \"currency\": \"USD\",\n    \"refundReason\": \"Customer request\",\n    \"refundedAt\": \"{{current_timestamp}}\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7058af69-9595-4fb5-9ec8-db00f8be4f7b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Mock webhook accepts gift_card_refunded event', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains correct event type', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.eventType).to.eql('gift_card_refunded');",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "50daabbc-2c44-4ec8-9b5c-9502658e15c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "6d4b931e-3b07-4bd6-b38c-20320e8303be",
            "name": "Test 4: Invalid Signature Rejection",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Signature",
                  "value": "sha256=invalid_signature_123"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_invalid\",\n    \"giftCardCode\": \"GC-INVALID-999\",\n    \"merchantId\": \"test-merchant-invalid\",\n    \"amount\": 1000,\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "745d6cf8-5dfc-4876-9fc0-957431873988",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Invalid signature is rejected', function () {",
                    "    pm.response.to.have.status(401);",
                    "});",
                    "",
                    "pm.test('Error message indicates invalid signature', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.false;",
                    "    pm.expect(jsonData.error).to.include('Invalid webhook signature');",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc65e2ec-136c-469b-94da-fee05b2f7381",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "7a0f48fb-5c11-4107-a25e-bb99baf9bef4",
            "name": "Test 5: Webhook Without Signature",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_no_sig\",\n    \"giftCardCode\": \"GC-NO-SIG-004\",\n    \"merchantId\": \"test-merchant-004\",\n    \"amount\": 3000,\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9449c9fe-c61f-4099-85bb-6c85896e2acb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Webhook without signature is accepted but not verified', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response indicates no signature verification', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "    pm.expect(jsonData.signatureVerified).to.be.false;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "f761da63-d6d5-47c2-806c-dc38a5557486",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          },
          {
            "id": "6d11bbfc-ce69-4c9b-9258-e10dfbbb6320",
            "name": "Test 6: Gift Card Redemption Triggers Webhook",
            "request": {
              "url": {
                "path": [
                  "api",
                  "gift-cards",
                  "redeem"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"code\": \"TEST-GC-WEBHOOK-123\",\n  \"redeemedBy\": \"webhook-test@example.com\",\n  \"merchantId\": \"test-merchant-webhook\",\n  \"amount\": 2500\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bc52c776-bb3a-4b37-9432-6e0692d73d38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Gift card redemption processed', function () {",
                    "    // Note: This test may fail if gift card doesn't exist",
                    "    // Test validates webhook trigger mechanism is in place",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 404, 400]);",
                    "});",
                    "",
                    "pm.test('Response structure is valid', function () {",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('success');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "305a8ce4-b5bc-4938-96ca-5c763217bfd1",
            "name": "Test 7: Performance Test - Multiple Events",
            "request": {
              "url": {
                "path": [
                  "api",
                  "mock",
                  "webhook"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-SiZu-Event",
                  "value": "gift_card_issued"
                },
                {
                  "key": "X-SiZu-Timestamp",
                  "value": "{{current_timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_perf_test_{{$randomInt}}\",\n    \"giftCardCode\": \"GC-PERF-{{$randomInt}}\",\n    \"merchantId\": \"perf-test-merchant\",\n    \"amount\": {{$randomInt}},\n    \"currency\": \"USD\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1eeefd1d-7917-44f5-a738-453d5e828228",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Performance test - response time under 500ms', function () {",
                    "    pm.expect(pm.response.responseTime).to.be.below(500);",
                    "});",
                    "",
                    "pm.test('Performance test - successful processing', function () {",
                    "    pm.response.to.have.status(200);",
                    "    const jsonData = pm.response.json();",
                    "    pm.expect(jsonData.success).to.be.true;",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "b13ce9bc-604e-407c-8164-eb59f3890677",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.set('current_timestamp', new Date().toISOString());"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      "cursor": {
        "position": 0,
        "iteration": 0,
        "length": 7,
        "cycles": 1,
        "empty": false,
        "eof": false,
        "bof": true,
        "cr": false,
        "ref": "a96d4bc4-268e-48a0-abee-7de5196b3b0a",
        "httpRequestId": "0e8af55d-436c-48b7-b18d-c53bdbc6ac72",
        "scriptId": "fe00daf6-a3d1-4887-a0de-b584f230a21f"
      }
    }
  ]
}