{
  "info": {
    "name": "Phase 15A: Multi-Event Webhook System",
    "description": "Comprehensive test suite for multi-event webhook system supporting gift_card_issued, gift_card_redeemed, and gift_card_refunded events",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Multi-Event Webhook Tests",
      "item": [
        {
          "name": "Test 1: Mock Webhook - Gift Card Issued",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-SiZu-Signature",
                "value": "sha256=5b5f3ee0cc5f32fa9f67a883b109999f8a7aa26560465e9ab7b29ff4b75c15f1"
              },
              {
                "key": "X-SiZu-Event",
                "value": "gift_card_issued"
              },
              {
                "key": "X-SiZu-Timestamp",
                "value": "{{current_timestamp}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_123\",\n    \"giftCardCode\": \"GC-ISSUED-001\",\n    \"merchantId\": \"test-merchant-001\",\n    \"amount\": 5000,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"customer@example.com\",\n    \"issuedAt\": \"{{current_timestamp}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/mock/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "mock", "webhook"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Mock webhook accepts gift_card_issued event', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains correct event type', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.eventType).to.eql('gift_card_issued');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.globals.set('current_timestamp', new Date().toISOString());"
                ]
              }
            }
          ]
        },
        {
          "name": "Test 2: Mock Webhook - Gift Card Redeemed",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-SiZu-Signature",
                "value": "sha256=7e4a6b1c8d0e3f5a7b1c4d7e0a3b6c9e2f5a8b1c4d7e0a3b6c9e2f5a8b1c4d7e"
              },
              {
                "key": "X-SiZu-Event",
                "value": "gift_card_redeemed"
              },
              {
                "key": "X-SiZu-Timestamp",
                "value": "{{current_timestamp}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"gift_card_redeemed\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_456\",\n    \"giftCardCode\": \"GC-REDEEMED-002\",\n    \"merchantId\": \"test-merchant-002\",\n    \"amount\": 2500,\n    \"currency\": \"USD\",\n    \"customerEmail\": \"redeemer@example.com\",\n    \"redemptionTime\": \"{{current_timestamp}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/mock/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "mock", "webhook"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Mock webhook accepts gift_card_redeemed event', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains correct event type', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.eventType).to.eql('gift_card_redeemed');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.globals.set('current_timestamp', new Date().toISOString());"
                ]
              }
            }
          ]
        },
        {
          "name": "Test 3: Mock Webhook - Gift Card Refunded",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-SiZu-Signature",
                "value": "sha256=6d3a5b0c7d9e2f4a6b0c3d6e9a2b5c8e1f4a7b0c3d6e9a2b5c8e1f4a7b0c3d6e"
              },
              {
                "key": "X-SiZu-Event",
                "value": "gift_card_refunded"
              },
              {
                "key": "X-SiZu-Timestamp",
                "value": "{{current_timestamp}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"gift_card_refunded\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_789\",\n    \"giftCardCode\": \"GC-REFUNDED-003\",\n    \"merchantId\": \"test-merchant-003\",\n    \"amount\": 7500,\n    \"currency\": \"USD\",\n    \"refundReason\": \"Customer request\",\n    \"refundedAt\": \"{{current_timestamp}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/mock/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "mock", "webhook"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Mock webhook accepts gift_card_refunded event', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains correct event type', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.eventType).to.eql('gift_card_refunded');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.globals.set('current_timestamp', new Date().toISOString());"
                ]
              }
            }
          ]
        },
        {
          "name": "Test 4: Invalid Signature Rejection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-SiZu-Signature",
                "value": "sha256=invalid_signature_123"
              },
              {
                "key": "X-SiZu-Event",
                "value": "gift_card_issued"
              },
              {
                "key": "X-SiZu-Timestamp",
                "value": "{{current_timestamp}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_invalid\",\n    \"giftCardCode\": \"GC-INVALID-999\",\n    \"merchantId\": \"test-merchant-invalid\",\n    \"amount\": 1000,\n    \"currency\": \"USD\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/mock/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "mock", "webhook"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid signature is rejected', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Error message indicates invalid signature', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.false;",
                  "    pm.expect(jsonData.error).to.include('Invalid webhook signature');",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.globals.set('current_timestamp', new Date().toISOString());"
                ]
              }
            }
          ]
        },
        {
          "name": "Test 5: Webhook Without Signature",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-SiZu-Event",
                "value": "gift_card_issued"
              },
              {
                "key": "X-SiZu-Timestamp",
                "value": "{{current_timestamp}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_test_no_sig\",\n    \"giftCardCode\": \"GC-NO-SIG-004\",\n    \"merchantId\": \"test-merchant-004\",\n    \"amount\": 3000,\n    \"currency\": \"USD\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/mock/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "mock", "webhook"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Webhook without signature is accepted but not verified', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates no signature verification', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.signatureVerified).to.be.false;",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.globals.set('current_timestamp', new Date().toISOString());"
                ]
              }
            }
          ]
        },
        {
          "name": "Test 6: Gift Card Redemption Triggers Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"TEST-GC-WEBHOOK-123\",\n  \"redeemedBy\": \"webhook-test@example.com\",\n  \"merchantId\": \"test-merchant-webhook\",\n  \"amount\": 2500\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/gift-cards/redeem",
              "host": ["{{base_url}}"],
              "path": ["api", "gift-cards", "redeem"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Gift card redemption processed', function () {",
                  "    // Note: This test may fail if gift card doesn't exist",
                  "    // Test validates webhook trigger mechanism is in place",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404, 400]);",
                  "});",
                  "",
                  "pm.test('Response structure is valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Test 7: Performance Test - Multiple Events",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-SiZu-Event",
                "value": "gift_card_issued"
              },
              {
                "key": "X-SiZu-Timestamp",
                "value": "{{current_timestamp}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"gift_card_issued\",\n  \"timestamp\": \"{{current_timestamp}}\",\n  \"data\": {\n    \"giftCardId\": \"gc_perf_test_{{$randomInt}}\",\n    \"giftCardCode\": \"GC-PERF-{{$randomInt}}\",\n    \"merchantId\": \"perf-test-merchant\",\n    \"amount\": {{$randomInt}},\n    \"currency\": \"USD\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/mock/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "mock", "webhook"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Performance test - response time under 500ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test('Performance test - successful processing', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.globals.set('current_timestamp', new Date().toISOString());"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL for all requests",
          "pm.globals.set('base_url', 'http://localhost:5000');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script - runs after each request",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has valid JSON structure', function () {",
          "    pm.response.to.be.json;",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ]
}